<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
     http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.hiperf</groupId>
	<artifactId>gwt-naked-core</artifactId>
	<packaging>jar</packaging>
	<version>2.6.0</version>
	<name>NAKED GWT CORE FRAMEWORK</name>
	<url>http://www.hiperflogic.com</url>


	<!-- <repositories> <repository> <id>jboss</id> <url>http://repository.jboss.org/maven2</url> 
		</repository> <repository> <releases> <enabled>true</enabled> </releases> 
		<id>jboss.repo</id> <url>https://repository.jboss.org/nexus/content/groups/public-jboss/</url> 
		</repository> <repository> <snapshots> <enabled>true</enabled> </snapshots> 
		<id>jboss-snapshopts</id> <url>http://snapshots.jboss.org/maven2/</url> </repository> 
		</repositories> -->
	<pluginRepositories>
		<pluginRepository>
			<id>home-repo</id>
			<url>file:///C:/Users/ez/.m2/repository</url>
			<!-- <url>http://addsrv01:8082/nexus/content/repositories/releases/</url> -->

		</pluginRepository>
	</pluginRepositories>

	<build>
		<pluginManagement>
			<plugins>
				
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>2.3</version>
				</plugin>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											exec-maven-plugin
										</artifactId>
										<versionRange>
											[1.2.1,)
										</versionRange>
										<goals>
											<goal>java</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.jacoco</groupId>
										<artifactId>
											jacoco-maven-plugin
										</artifactId>
										<versionRange>
											[0.6.4.201312101107,)
										</versionRange>
										<goals>
											<goal>prepare-agent</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>2.2</version>
				</plugin>
				<!-- <plugin> <groupId>org.codehaus.mojo</groupId> <artifactId>cobertura-maven-plugin</artifactId> 
					<version>2.6</version> </plugin> -->
				<!-- <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-antrun-plugin</artifactId>
	<version>1.7</version>
	<executions>
		<execution>
			<id>Emma instrumentation</id>
			<phase>process-classes</phase>
			<configuration>
				<skip>${skipEmma}</skip>
				<target>
					<property name="test_classpath" refid="maven.test.classpath" />
					<echo message="Emma 
					- instrumentation" />
					<echo message="test classpath: ${test_classpath}" />
					<java fork="true" classpathref="maven.test.classpath"
						classname="emma">
						<arg value="instr" />
						<arg value="-cp" />
						<arg value="target/classes" />
						<arg value="-m" />
						<arg value="overwrite" />
						<arg value="-out" />
						<arg value="target/emma/emma.em" />
					</java>
				</target>
			</configuration>
			<goals>
				<goal>run</goal>
			</goals>
		</execution>
		<execution>
			<id>Emma Report</id>
			<phase>prepare-package</phase>
			<configuration>
				<skip>${skipEmma}</skip>
				<target>
					<property name="test_classpath" refid="maven.test.classpath" />
					<echo message="Emma - instrumentation" />
					<echo message="test classpath: 
					${test_classpath}" />
					<mkdir dir="${project.basedir}/target/emma-report" />
					<java dir="${project.basedir}/target/emma-report" fork="true"
						classpathref="maven.test.classpath" classname="emma">
						<arg value="report" />
						<arg value="-sp" />
						<arg value="${project.basedir}/src/main/java" />
						<arg value="-r" />
						<arg value="html" />
						<arg value="-in" />
						<arg value="${project.basedir}/target/emma/emma.em" />
					</java>
					<fail message="Emma Complete - exiting build" />
				</target>
			</configuration>
			<goals>
				<goal>run</goal>
			</goals>
		</execution>
	</executions>
</plugin> -->
			</plugins>
		</pluginManagement>
		<resources>
			<resource>
				<directory>${basedir}/src/main/java</directory>
				<includes>
					<include>**/*.xml</include>
					<include>**/*.properties</include>
					<include>**/*.gif</include>
					<include>**/*.jpg</include>
					<include>**/*.png</include>
				</includes>
			</resource>
		</resources>
		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>${compile.version}</source>
					<target>${compile.version}</target>
				</configuration>
			</plugin>
      <!-- <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>gwt-maven-plugin</artifactId>
        <version>${gwt.version}</version>
        				<configuration>
					<strict>true</strict>
            <testTimeOut>180</testTimeOut>
            <includes>**/*GwtTestSuite.java</includes>
            <mode>htmlunit</mode>

            <extraJvmArgs>-Xss1024k -Xmx1024m -XX:MaxPermSize=256m</extraJvmArgs>
            <logLevel>INFO</logLevel>
            <style>${gwt.style}</style>

				</configuration>
        
        <executions>
          <execution>
            <goals>
              <goal>test</goal>
            </goals>
            <phase>test</phase>
          </execution>
        </executions>
      </plugin> -->
     <!--  <plugin>
 <groupId>org.codehaus.mojo</groupId>
 <artifactId>build-helper-maven-plugin</artifactId>
 <version>1.5</version>
 <executions>
  <execution>
   <id>add-test-source</id>
   <phase>generate-test-sources</phase>
   <goals>
    <goal>add-test-source</goal>
   </goals>
   <configuration>
    <sources>
     <source>src/gwt-test/java</source>
    </sources>
   </configuration>
  </execution>
 </executions>
</plugin> -->
			<!-- <plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
			</plugin> -->
			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-antrun-plugin</artifactId> 
				</plugin> -->
				
			<!-- <plugin>
  <groupId>org.jboss.errai</groupId>
  <artifactId>jacoco-gwt-maven-plugin</artifactId>
  <version>0.5.4.201202141554</version>
  <configuration>
    <snapshotDirectory>${project.build.directory}/test-classes</snapshotDirectory>
  </configuration>
</plugin>	 -->
			<!-- <plugin>
	<groupId>org.jacoco</groupId>
	<artifactId>jacoco-maven-plugin</artifactId>
	<version>0.6.4.201312101107</version>
	<configuration>
          <propertyName>jacoco.agent.argLine</propertyName>
          <destFile>${sonar.jacoco.itReportPath}</destFile>
          <append>true</append>
        </configuration>
        <executions>
          <execution>
            <id>agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
        </executions>	
</plugin> -->
<!-- <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.16</version>
        <configuration>
          <argLine>${jacoco.agent.argLine}</argLine>
          <additionalClasspathElements>
						<additionalClasspathElement>
							${project.build.sourceDirectory}
						</additionalClasspathElement>
						<additionalClasspathElement>
							${project.build.resources[0].directory}
						</additionalClasspathElement>
						<additionalClasspathElement>
							${project.build.testSourceDirectory}
						</additionalClasspathElement>
						<additionalClasspathElement>
							${basedir}/src/test/resources
						</additionalClasspathElement>
					</additionalClasspathElements>
					<useSystemClassLoader>true</useSystemClassLoader>

<useManifestOnlyJar>false</useManifestOnlyJar>

<forkCount>1</forkCount>
          <includes>
            <include>**/*TestIntegration.java</include>
          </includes>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
<plugin>
<groupId>org.apache.maven.plugins</groupId>
<artifactId>maven-surefire-plugin</artifactId>
<version>2.16</version>
</plugin> -->

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.1.2</version>
				<configuration>
					<excludes>
						<exclude>com/hiperf/common/rebind/**/*.java</exclude>
						<exclude>com/hiperf/common/ui/server/**/*.java</exclude>
					</excludes>
				</configuration>
				<executions>

					<execution>
						<id>attach-sources</id>
						<phase>verify</phase>
						<goals>
							<goal>jar-no-fork</goal>

						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-javadoc-plugin</artifactId> 
				<version>2.7</version> <executions> <execution> <id>attach-javadocs</id> 
				<goals> <goal>jar</goal> </goals> </execution> </executions> </plugin> -->

			<!-- <plugin> <artifactId>maven-surefire-plugin</artifactId> <version>2.6</version> 
				<configuration> <additionalClasspathElements> <additionalClasspathElement>${project.build.sourceDirectory}</additionalClasspathElement> 
				<additionalClasspathElement>${project.build.testSourceDirectory}</additionalClasspathElement> 
				</additionalClasspathElements> <useManifestOnlyJar>false</useManifestOnlyJar> 
				<forkMode>always</forkMode> <systemProperties> <property> <name>gwt.args</name> 
				<value>-out ${webAppDirectory}</value> </property> </systemProperties> </configuration> 
				</plugin> -->
        
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<useManifestOnlyJar>false</useManifestOnlyJar>
					<forkMode>always</forkMode>
					<argLine>-Xmx2g</argLine>
					<redirectTestOutputToFile>true</redirectTestOutputToFile>
					<additionalClasspathElements>
						<additionalClasspathElement>
							${project.build.sourceDirectory}
						</additionalClasspathElement>
						<additionalClasspathElement>
							${project.build.resources[0].directory}
						</additionalClasspathElement>
						<additionalClasspathElement>
							${project.build.testSourceDirectory}
						</additionalClasspathElement>
						<additionalClasspathElement>
							${basedir}/src/test/resources
						</additionalClasspathElement>
					</additionalClasspathElements>
					<systemProperties>
						<property>
							<name>gwt.args</name>
							<value>-out ${webAppDirectory}</value>
						</property>
					</systemProperties>
					<!-- <systemPropertyVariables> <emma.coverage.out.file>${project.basedir}/target/emma/emma.ec</emma.coverage.out.file> 
						</systemPropertyVariables> -->
				</configuration>
			</plugin>
		</plugins>
	</build>

	<reporting>
		<plugins>  
      <plugin>      
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>emma-maven-plugin</artifactId>
        <inherited>true</inherited>          
      </plugin>
      <plugin> 
        <groupId>org.codehaus.mojo</groupId> 
        <artifactId>surefire-report-maven-plugin</artifactId> 
        <inherited>true</inherited>
      </plugin>       
    </plugins>      
	</reporting>

	<!-- <reporting> <plugins> <plugin> <groupId>org.apache.maven.plugins</groupId> 
		<artifactId>maven-javadoc-plugin</artifactId> <version>2.7</version> </plugin> 
		</plugins> </reporting> -->


	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	<sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
	<sonar.jacoco.itReportPath>${project.basedir}/target/jacoco-it.exec</sonar.jacoco.itReportPath>
		<gwt.version>2.6.0</gwt.version>
		<hibernate.version>4.2.1.Final</hibernate.version>
		<xml-apis.version>1.3.04</xml-apis.version>
		<hibernate.validator.version>4.3.1.Final</hibernate.validator.version>
		<coherence.version>3.6.1</coherence.version>
		<compile.version>1.7</compile.version>
		<commons-fileupload.version>1.2.2</commons-fileupload.version>
		<commons-lang.version>3.0.1</commons-lang.version>
		<poi.version>3.8</poi.version>
		<jta.version>1.1</jta.version>
		<validation-api.version>1.0.0.GA</validation-api.version>
		<hiperf-security-core.version>1.0</hiperf-security-core.version>
		<commons-codec.version>1.7</commons-codec.version>
		<junit.version>4.8.1</junit.version>
		 <gwt.style>OBF</gwt.style>
    <webappDirectory>${project.build.directory}/${project.build.finalName}</webappDirectory>
		
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${commons-lang.version}</version>
		</dependency>
		
	
		<!-- GWT dependencies (from maven "central" repo) -->
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-servlet</artifactId>
			<version>${gwt.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<version>${gwt.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-dev</artifactId>
			<version>${gwt.version}</version>
			<scope>provided</scope>
		</dependency>


		<dependency>
			<groupId>javax.transaction</groupId>
			<artifactId>jta</artifactId>
			<version>${jta.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>${validation-api.version}</version>
			<scope>provided</scope>
		</dependency>



		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.version}</version>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${hibernate.version}</version>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>${hibernate.validator.version}</version>
		</dependency>

		<dependency>
			<groupId>xml-apis</groupId>
			<artifactId>xml-apis</artifactId>
			<version>${xml-apis.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>${poi.version}</version>
		</dependency>

		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>${commons-fileupload.version}</version>
		</dependency>

		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>${commons-codec.version}</version>
		</dependency>

		
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-jdk14</artifactId>
			<version>1.7.5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-c3p0</artifactId>
			<version>${hibernate.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>2.2.9</version>
			<scope>test</scope>
		</dependency>


		<!-- <dependency> <groupId>emma</groupId> <artifactId>emma</artifactId> 
			<version>2.0.5312-patched</version> <scope>test</scope> </dependency> -->

		<!-- <dependency> <groupId>com.googlecode.gwt-test-utils</groupId> <artifactId>gwt-test-utils</artifactId> 
			<version>0.46-SNAPSHOT</version> <scope>test</scope> </dependency> -->

	</dependencies>
	<profiles>
		<profile>
			<id>sonar</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<!-- Example for MySQL -->
				<sonar.jdbc.url>
					jdbc:h2:tcp://localhost:9092/sonar
				</sonar.jdbc.url>
				<sonar.jdbc.username>sonar</sonar.jdbc.username>
				<sonar.jdbc.password>sonar</sonar.jdbc.password>

				<!-- Optional URL to server. Default value is http://localhost:9000 -->
				<sonar.host.url>
					http://localhost:9900
				</sonar.host.url>
			</properties>
		</profile>
		<profile>
			<id>prod</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
			<plugins>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<descriptors>
						<descriptor>src/assembly/rt.xml</descriptor>
						<descriptor>src/assembly/common.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>make-jar-dev</id> <!-- this is used for inheritance merges -->
						<phase>package</phase> <!-- bind to the packaging phase -->
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.pyx4me</groupId>
				<artifactId>proguard-maven-plugin</artifactId>
				<version>2.0.4</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>proguard</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<proguardVersion>4.8</proguardVersion>
					<libs>
						<lib>${java.home}/lib/rt.jar</lib>
						<lib>${java.home}/lib/jce.jar</lib>
						<lib>${project.build.directory}/${project.build.finalName}-common.jar</lib>
					</libs>
					<injar>${project.build.finalName}-rt.jar</injar>
					<outjar>${project.build.finalName}-small.jar</outjar>
					<outputDirectory>${project.build.directory}</outputDirectory>
					<proguardInclude>${basedir}/src/assembly/gwt-naked.pro</proguardInclude>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>net.sf.proguard</groupId>
						<artifactId>proguard</artifactId>
						<version>4.8</version>
						<scope>runtime</scope>
					</dependency>
				</dependencies>
			</plugin>
			</plugins>
			</build>
			
		</profile>
	</profiles>
</project>
